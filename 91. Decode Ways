class Solution {
public:
    int numDecodings(string s) {
        if(s.length()==0 || s[0]=='0')
        {
            return 0;
        }
        if(s.length()==1)
        {
            return 1;
        }
        vector<int> dp(s.size(),-1);
        int n = s.size()-1;
        int ans = helper(s,n,dp);
        return ans;
    }
    int helper(string s,int n,vector<int>& dp)
    {
        if(n<0)
            return 0;
        else if(n==0 and s[n]!='0')
            return 1;
        if(dp[n]!=-1)
            return dp[n];
        int nm1 = helper(s,n-1,dp);
        int nm2 = helper(s,n-2,dp);
        int d1 = s[n]-'0';
        int d2 = s[n-1]-'0';
        int num = d2*10 + d1;
        if(d1 == 0 and d2 ==0)
            return dp[n] = 0;
        else if(d2 == 0 and d1 != 0)
            return dp[n] =nm1;
        else if(d2 != 0 and d1 == 0){
            if(d2 == 1 || d2 == 2)
                return dp[n] = (n >= 2 ? nm2 : 1);
            else
                return dp[n] = 0;
        }
        else{ 
            if(num<=26)
                return dp[n] = (nm1 + (n>=2 ? nm2 : 1));  
            else{
                return dp[n] = nm1;
            }
        }
        return 0;
    }
};
